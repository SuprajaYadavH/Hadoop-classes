############################################
Hadoop setup
############################################

Oracle Virtual Box - https://www.virtualbox.org/wiki/Downloads 
Ubuntu Desktop LTS - https://ubuntu.com/download/desktop 
Setup parameters - 


# Ip address
ifconfig
sudo apt update 

# Java
sudo apt install openjdk-8-jdk
ls /usr/lib/jvm/java-8-openjdk-amd64
nano ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export PATH=$PATH:$JAVA_HOME/bin
source .bashrc
echo $JAVA_HOME
java -version #1.8

# Passwordless ssh
ssh localhost
sudo apt-get install openssh-server openssh-client
ssh localhost
ssh-keygen -t rsa -P ""
cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys
ssh localhost
exit

# Hadoop
mkdir -p course/softwares
cd course/softwares
wget https://dlcdn.apache.org/hadoop/common/hadoop-3.3.4/hadoop-3.3.4.tar.gz 
mv hadoop-3.3.4.tar.gz course/softwares
tar -xzvf hadoop-3.3.4.tar.gz

'''
Local (or Standalone) mode: There are no daemons and everything runs on a single JVM.
Pseudo-Distributed mode: Each daemon(Namenode, Datanode etc) runs on its own JVM on a single host.
Distributed mode: Each Daemon run on its own JVM across a cluster of hosts
'''

# Stand alone mode
ls
nano ~/.bashrc
export HADOOP_HOME=$HOME/Desktop/course/softwares/hadoop-3.3.4
export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
source .bashrc
hadoop version

# Word count problem in standalone mode
ls $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar

mkdir wordcountex 
# add text files inside that folder or cp $HADOOP_HOME/*.txt wordcountex
jar tf $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar | grep wordcount -i
hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar  wordcount wordcountex texts_output 
cat texts_output/part-r-00000 | sort -k 2 -nr | head n -5

# Pseudo Distributed mode
nano ~/.bashrc

export HADOOP_HOME=$HOME/Desktop/course/softwares/hadoop-3.3.4
export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
export HADOOP_HDFS_HOME=$HADOOP_HOME
export HADOOP_MAPRED_HOME=$HADOOP_HOME
export HADOOP_COMMON_HOME=$HADOOP_HOME
export HADOOP_YARN_HOME=$HADOOP_HOME
export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
export HADOOP_INSTALL=$HADOOP_HOME
export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib"
export HADOOP_OPTS="-Djava.library.path=$HADOOP_COMMON_LIB_NATIVE_DIR"
export HADOOP_SECURITY_CONF_DIR

source ~/.bashrc

hadoop version
cd $HADOOP_HOME/etc/hadoop

nano hadoop-env.sh 
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

nano core-site.xml
<configuration>

   <property> 
      <name>fs.default.name</name> 
      <value>hdfs://localhost:9000</value> 
   </property>
   
</configuration>

nano hdfs-site.xml
<configuration>

   <property> 
      <name>dfs.replication</name> 
      <value>1</value> 
   </property> 
   <property> 
      <name>dfs.name.dir</name> 
      <value>file:///home/vboxuser/hadoopinfra/hdfs/namenode </value> 
   </property> 
   <property> 
      <name>dfs.data.dir</name>
      <value>file:///home/vboxuser/hadoopinfra/hdfs/datanode </value > 
   </property>
   
</configuration>

hadoop classpath
/home/vboxuser/Desktop/course/softwares/hadoop-3.3.4/etc/hadoop:/home/vboxuser/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/common/lib/*:/home/vboxuser/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/common/*:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/hdfs:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/hdfs/lib/*:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/hdfs/*:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/mapreduce/*:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/yarn:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/yarn/lib/*:/home/sabha/Desktop/course/softwares/hadoop-3.3.4/share/hadoop/yarn/*


nano yarn-site.xml
<configuration>

   <property> 
      <name>yarn.nodemanager.aux-services</name> 
      <value>mapreduce_shuffle</value> 
   </property>
   <property>
    <name>yarn.application.classpath</name>
    <value>output from hadoop classpath</value>
 </property>
   
</configuration>

nano mapred-site.xml
<configuration>

   <property> 
      <name>mapreduce.framework.name</name> 
      <value>yarn</value> 
   </property>
<property>
  <name>mapreduce.reduce.env</name>
  <value>HADOOP_MAPRED_HOME=$HOME/Desktop/course/softwares/hadoop-3.3.4</value>
</property>

<property>
  <name>yarn.app.mapreduce.am.env</name>
  <value>HADOOP_MAPRED_HOME=$HOME/Desktop/course/softwares/hadoop-3.3.4</value>
</property>

<property>
  <name>mapreduce.map.env</name>
  <value>HADOOP_MAPRED_HOME=$HOME/Desktop/course/softwares/hadoop-3.3.4</value>
</property>


</configuration>

cd ~
hdfs namenode -format
start-dfs.sh
start-yarn.sh

# Port to access Hadoop
http://localhost:9870/
http://localhost:8088/

stop-yarn.sh
stop-dfs.sh


# Word count problem in psuedo distributed mode
ls $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar
mkdir wordcountex 
# add text files inside that folder or cp $HADOOP_HOME/*.txt wordcountex
jar tf $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar | grep wordcount -i
# add files to hdfs 
hdfs dfs -mkdir -p /user/input/wcexample
hdfs dfs -put wordcountex/*.txt /user/input/wcexample

# run wc from hdfs files and save into hdfs
hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.3.4.jar  wordcount /user/input/wcexample /user/output/ex2 
hdfs dfs -cat /user/output/ex2/part-r-00000 | sort -k 2 -nr | head -n5

